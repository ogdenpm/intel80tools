isis: procedure (type, parameter$ptr) external;
    declare type byte,
            parameter$ptr address;
end isis;

open: procedure (conn$p, path$p, access, echo, status$p) external;
    declare (conn$p, path$p, access, echo, status$p) address;
end open;

close: procedure (conn, status$p) external;
    declare (conn, status$p) address;
end close;

read: procedure (conn, buff$p, count, actual$p, status$p) external;
    declare (conn, buff$p, count, actual$p, status$p) address;
end read;

write: procedure (conn, buff$p, count, status$p) external;
    declare (conn, buff$p, count, status$p) address;
end write;

seek: procedure (conn, mode, block$p, byte$p, status$p) external;
    declare (conn, mode, block$p, byte$p, status$p) address;
end seek;

rescan: procedure (conn, status$p) external;
    declare (conn, status$p) address;
end rescan;

spath: procedure (path$p, info$p, status$p) external;
    declare (path$p, info$p, status$p) address;
end spath;

delete: procedure (path$p, status$p) external;
    declare (path$p, status$p) address;
end delete;

rename: procedure (old$p, new$p, status$p) external;
    declare (old$p, new$p, status$p) address;
end rename;

attrib: procedure (path$p, attrib, on$off, status$p) external;
    declare (path$p, attrib, on$off, status$p) address;
end attrib;

consol: procedure (ci$p, co$p, status$p) external;
    declare (ci$p, co$p, status$p) address;
end consol;

load: procedure (path$p, load$offset, switch, entry$p, status$p) external;
    declare (path$p, load$offset, switch, entry$p, status$p) address;
end load;

whocon: procedure (conn, buff$p) external;
    declare (conn, buff$p) address;
end whocon;

error: procedure (error$num) external;
    declare (error$num) address;
end error;

de$time: procedure (dt$p, status$p) external;
    declare (dt$p, status$p) address;
end de$time;

filinf: procedure (file$table$p, mode, file$info$p, status$p) external;
    declare (file$table$p, file$info$p, status$p) address,
            mode byte;
end filinf;

getd: procedure (did, conn$p, count, actual$p, table$p, status$p) external;
    declare (did, conn$p, count, actual$p, table$p, status$p) address;
end getd;

exit: procedure external;
end exit;

ci: procedure byte external;
end ci;

co: procedure (char) external;
    declare (char) byte;
end co;

ri: procedure byte external;
end ri;

po: procedure (char) external;
    declare (char) byte;
end po;

lo: procedure (char) external;
    declare (char) byte;
end lo;

csts: procedure byte external;
end csts;

iodef: procedure (type, entry) external;
    declare type byte,
            entry address;
end iodef;

iochk: procedure byte external;
end iochk;

ioset: procedure (value) external;
    declare value byte;
end ioset;

memck: procedure address external;
end memck;

$list
